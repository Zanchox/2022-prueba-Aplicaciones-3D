Universidad Militar Nueva Granada

- Guillermo Andres Campo Benjumea
- Juan Esteban Sanchez Rincon
- Camilo Andres Cubillos Ferrer
- Juan Sebastian Koshmieder Lagos
- Sergio David Trujillo Becerra

Aplicaciones 3D

2024

Código: ButtonManager
Descripción General
El código es un script de Unity escrito en C# que maneja las interacciones de varios botones en una interfaz de usuario. 
Este script incluye varias funciones que se ejecutan cuando se presionan los botones, utilizando el Debug.Log para mostrar mensajes y SceneManager para cambiar
entre diferentes escenas. Se trata de un manejador básico de botones para un juego, que responde a eventos de clic.

using UnityEngine;
using UnityEngine.SceneManagement; // Importa SceneManager para gestionar escenas

// Clase ButtonManager que gestiona las acciones de los botones en el juego
public class ButtonManager : MonoBehaviour
{
    // Método que se ejecuta al presionar el botón "Jugar"
    // Muestra un mensaje en la consola
    public void OnJugarButtonClicked()
    {
        Debug.Log("Boton Jugar presionado");
        // Aquí se podría cargar la escena del juego si fuera necesario
    }

    // Método que se ejecuta al presionar el botón "Opciones"
    // Carga la escena "Escena_Opciones"
    public void OnOpcionesButtonClicked()
    {
        Debug.Log("Boton Opciones presionado");
        SceneManager.LoadScene("Escena_Opciones");
    }

    // Método que se ejecuta al presionar el botón "Garaje"
    // Carga la escena "Escena_Garaje"
    public void OnGarajeButtonClicked()
    {
        Debug.Log("Boton Garaje presionado");
        SceneManager.LoadScene("Escena_Garaje");
    }

    // Método que se ejecuta al presionar el botón "Jugador"
    // Muestra un mensaje en la consola
    public void OnJugadorButtonClicked()
    {
        Debug.Log("Boton Jugador Presionado");
    }

    // Método que se ejecuta al presionar el botón "Atrás"
    // Carga la escena principal del menú "Pantalla_Principal"
    public void OnAtrasButtonClicked()
    {
        Debug.Log("Boton Atras Presionado");
        SceneManager.LoadScene("Pantalla_Principal");
    }

    // Método que se ejecuta al presionar el botón "Música"
    // Muestra un mensaje en la consola
    public void OnMusicaButtonClicked()
    {
        Debug.Log("Boton Musica Presionado");
        // Se puede añadir funcionalidad adicional para manejar el audio del juego
    }

    // Método que se ejecuta al presionar el botón "Efectos"
    public void OnEfectosButtonClicked()
    {
        Debug.Log("Boton Efectos Presionado");
        // Aquí se puede manejar la activación o desactivación de efectos sonoros
    }

    // Método que se ejecuta al presionar el botón "Idioma"
    public void OnIdiomaButtonClicked()
    {
        Debug.Log("Boton Idioma Presionado");
        // Posible implementación para cambiar el idioma del juego
    }

    // Método que se ejecuta al presionar el botón "Quit"
    // Cierra la aplicación
    public void OnQuitButtonClicked()
    {
        Debug.Log("Boton Quit Presionado");
        Application.Quit(); // Cierra la aplicación cuando se está en una build final
    }
}

Explicación de cada método:
OnJugarButtonClicked:
Este método se ejecuta al presionar el botón "Jugar". Actualmente, sólo muestra un mensaje en la consola indicando que el botón fue presionado. 
Se podría modificar para iniciar el juego.

OnOpcionesButtonClicked:
Al presionar el botón "Opciones", se carga la escena "Escena_Opciones" usando SceneManager.LoadScene. 
Esto se usa comúnmente para cambiar a una pantalla de configuración del juego.

OnGarajeButtonClicked:
Este método carga la escena del garaje ("Escena_Garaje") donde posiblemente el jugador pueda seleccionar vehículos o realizar personalizaciones.

OnJugadorButtonClicked:
Al presionar el botón "Jugador", sólo muestra un mensaje en la consola. Puede usarse para acciones futuras relacionadas con el jugador.

OnAtrasButtonClicked:
Este botón carga la escena principal del juego, llamada "Pantalla_Principal", probablemente regresando al menú principal.

OnMusicaButtonClicked y OnEfectosButtonClicked:
Estos métodos muestran mensajes relacionados con la música y los efectos. 
Aquí se podrían implementar funcionalidades para activar/desactivar música y efectos sonoros.

OnIdiomaButtonClicked:
Este método podría usarse para cambiar el idioma del juego. Actualmente, solo muestra un mensaje.

OnQuitButtonClicked:
Este método cierra la aplicación cuando se presiona el botón "Quit", lo que es útil para finalizar el juego cuando se está en la versión final (build).
